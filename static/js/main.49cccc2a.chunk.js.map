{"version":3,"sources":["component/Dialog.tsx","component/Notification.tsx","App.tsx","index.tsx"],"names":["Dialog","setOpen","setNoti","className","onClick","src","alt","href","e","setTimeout","Notification","message","style","marginLeft","backgroundColor","color","borderStyle","margin","App","useState","open","noti","position","top","left","transform","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAyCeA,EAlCkB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAgB1C,OACE,sBAAKC,UAAU,SAAf,UACE,wBAAQA,UAAU,eAAeC,QAAS,kBAAMH,GAAQ,IAAxD,eACA,qBAAKE,UAAU,aAAaE,IAAI,4IAA4IC,IAAI,WAChL,oBAAGH,UAAU,YAAb,uLAG4B,mBAAGI,KAAK,IAAR,0BAE5B,gCACE,wBAAQJ,UAAU,gBAAgBC,QAxBnB,SAACI,GACpBN,EAAQ,kCACRO,YAAW,WACTP,EAAQ,MACP,MAoBC,4BACA,wBAAQC,UAAU,gBAAgBC,QAlBnB,SAACI,GACpBN,EAAQ,oBACRO,YAAW,WACTP,EAAQ,MACP,MAcC,gCAEF,4BAAG,mBAAGK,KAAK,IAAR,mCCjBMG,EAZwB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAST,EAAc,EAAdA,QACjD,OACE,mCACa,KAAZS,GACD,sBAAKR,UAAU,OAAf,UACE,mBAAGS,MAAO,CAACC,WAAY,QAAvB,SAAiCF,IACjC,wBAAQR,UAAU,eAAeC,QAAS,kBAAMF,EAAQ,KAAKU,MAAO,CAACE,gBAAiB,UAAWC,MAAO,QAASC,YAAa,OAAQC,OAAQ,qBAA9I,qBCQSC,MAjBf,WACE,MAAwBC,oBAAkB,GAA1C,mBAAOC,EAAP,KAAanB,EAAb,KACA,EAAwBkB,mBAAiB,IAAzC,mBAAOE,EAAP,KAAanB,EAAb,KACA,OACE,iCACE,cAAC,EAAD,CAAcS,QAASU,EAAMnB,QAASA,IACtC,yBAASC,UAAU,YAAnB,SAEIiB,EACE,cAAC,EAAD,CAAQnB,QAASA,EAASC,QAASA,IACnC,wBAAQE,QAAS,kBAAMH,GAAQ,IAAOE,UAAU,gBAAgBS,MAAO,CAACU,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,UAAW,yBAAlI,gCCTZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.49cccc2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface IProps {\r\n  setOpen: Function,\r\n  setNoti: Function,\r\n};\r\n\r\nconst Dialog: React.FC<IProps> = ({setOpen, setNoti}) => {\r\n\r\n  const handleAccept = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n    setNoti(\"We are now part of Salesforce.\");\r\n    setTimeout(() => {\r\n      setNoti(\"\");\r\n    }, 5000);\r\n  }\r\n\r\n  const handleReject = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n    setNoti(\"Cookies rejected\");\r\n    setTimeout(() => {\r\n      setNoti(\"\");\r\n    }, 5000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dialog\">\r\n      <button className=\"close-button\" onClick={() => setOpen(false)}>X</button>\r\n      <img className=\"cookie-img\" src=\"https://png.pngtree.com/png-clipart/20201208/original/pngtree-cartoon-big-half-chocolate-bean-cookie-cookie-clipart-png-image_5528096.jpg\" alt=\"cookie\" />\r\n      <p className=\"text-area\">\r\n        By clicking \"Accept All Cookies\", you agree to the storing of cookies \r\n        on your device to enhance site navigation, analyze site usage, and assist \r\n        in our marketing efforts. <a href=\"#\">More info</a> \r\n      </p>\r\n      <div>\r\n        <button className=\"choice-button\" onClick={handleAccept}>Accept cookies</button>\r\n        <button className=\"choice-button\" onClick={handleReject}>Decline cookies</button>\r\n      </div>\r\n      <p><a href=\"#\">Cookie settings</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\n\r\ninterface Iprops {\r\n  message: string,\r\n  setNoti: Function,\r\n}\r\n\r\nconst Notification: React.FC<Iprops> = ({ message, setNoti }) => {\r\n  return (\r\n    <>\r\n    {message !== \"\" && \r\n    <div className=\"noti\">\r\n      <p style={{marginLeft: \"40px\"}}>{message}</p>\r\n      <button className=\"close-button\" onClick={() => setNoti(\"\")} style={{backgroundColor: '#405287', color: 'white', borderStyle: 'none', margin: \"5px 5px auto auto\"}}>X</button>\r\n    </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, { useState } from 'react';\nimport Dialog from './component/Dialog';\nimport Notification from './component/Notification';\n\nfunction App() {\n  const [open, setOpen] = useState<boolean>(false);\n  const [noti, setNoti] = useState<string>(\"\");\n  return (\n    <main>\n      <Notification message={noti} setNoti={setNoti}/>\n      <section className='container'>\n        {\n          open \n          ? <Dialog setOpen={setOpen} setNoti={setNoti} />\n          : <button onClick={() => setOpen(true)} className=\"choice-button\" style={{position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>Open setting</button>\n        }\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}